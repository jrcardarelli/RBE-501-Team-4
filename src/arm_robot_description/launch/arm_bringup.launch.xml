<launch>
    <!-- Define paths for URDF and RViz config -->
    <let name="urdf_path"
        value="$(find-pkg-share arm_robot_description)/urdf/arm_description.urdf.xacro" />
    
    <let name="rviz_config_path"
        value="$(find-pkg-share arm_robot_description)/rviz/arm_config.rviz" />

    <!-- Load the robot description into the parameter server -->
    <node pkg="robot_state_publisher" exec="robot_state_publisher">
        <param name="robot_description"
            value="$(command 'xacro $(var urdf_path)')" />
    </node>

    <!-- Start Gazebo -->
    <include file="$(find-pkg-share gazebo_ros)/launch/gazebo.launch.py" />

    <!-- Spawn the robot in Gazebo -->
    <node pkg="gazebo_ros" exec="spawn_entity.py"
        args=" -topic robot_description -entity arm_description" />

    <!-- Start the joint state publisher GUI -->
    <node pkg="joint_state_publisher_gui" exec="joint_state_publisher_gui" />

    <!-- Start RViz with the specified config -->
    <node pkg="rviz2" exec="rviz2" output="screen"
        args="-d $(var rviz_config_path)" />

    <!-- Load the joint state controller -->
    <node pkg="controller_manager" exec="spawner" output="screen"
        args="joint_state_controller" />

    <!-- Load the joint trajectory controller -->
    <node pkg="controller_manager" exec="spawner" output="screen"
        args="joint_trajectory_controller" />

    <!-- Load the position controllers for each joint -->
    <node pkg="controller_manager" exec="spawner" output="screen"
        args="base_joint_position_controller" />
    <node pkg="controller_manager" exec="spawner" output="screen"
        args="link1_joint2_position_controller" />
    <node pkg="controller_manager" exec="spawner" output="screen"
        args="link2_joint3_position_controller" />
</launch>
<!-- 
ros2 launch arm_robot_description arm_bringup.launch.xml 

-->